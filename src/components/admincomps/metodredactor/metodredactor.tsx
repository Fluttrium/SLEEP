"use client";

import { motion } from "framer-motion";
import * as React from "react";
import { useState } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { Button } from "@/components/shared/ui/button";
import { Plus } from "lucide-react";
import {
    Dialog,
    DialogContent,
    DialogDescription,
    DialogFooter,
    DialogHeader,
    DialogTitle,
    DialogTrigger,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { toast, Toaster } from "react-hot-toast";

// ‚úÖ –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
const formSchema = z.object({
    title: z.string().min(3, "–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞"),
    description: z.string().min(10, "–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤"),
    addeddescription: z.string().optional(),
    image: z.any().refine((file) => file instanceof File, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"),
});

export default function Metodredactor() {
    const {
        register,
        handleSubmit,
        setValue,
        trigger,
        watch,
        formState: { errors },
    } = useForm({
        resolver: zodResolver(formSchema),
    });

    const [imagePreview, setImagePreview] = useState<string | null>(null);

    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    const onSubmit = async (data: any) => {
        console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö:", data);

        const formData = new FormData();
        formData.append("title", data.title);
        formData.append("description", data.description);
        if (data.addeddescription) formData.append("addeddescription", data.addeddescription);
        formData.append("image", data.image);

        try {
            const response = await fetch("/api/admin/metods", {
                method: "POST",
                body: formData,
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
            }

            toast.success("–ú–µ—Ç–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
            console.log("‚úÖ –ú–µ—Ç–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!");
        } catch (error: any) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", error);
            toast.error(error.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
        }
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        const file = event.target.files?.[0];
        if (file) {
            setValue("image", file); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤ useForm
            trigger("image"); // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –ø–æ–ª–µ image
            setImagePreview(URL.createObjectURL(file)); // –°–æ–∑–¥–∞—ë–º preview
        }
    };

    return (
        <motion.div
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, ease: "easeOut" }}
            className="w-full px-5"
        >
            <div className="text-7xl pl-5">–ú–µ—Ç–æ–¥—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</div>
            <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.5 }}
                className="rounded-md"
            >
                <Toaster position="top-center" reverseOrder={false} />
                <div className="absolute bottom-5 right-5">
                    <Dialog>
                        <DialogTrigger asChild>
                            <Button variant="secondary">
                                <Plus />
                            </Button>
                        </DialogTrigger>
                        <DialogContent className="sm:max-w-[425px]">
                            <DialogHeader>
                                <DialogTitle>–°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞</DialogTitle>
                                <DialogDescription>
                                    –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                                </DialogDescription>
                            </DialogHeader>
                            <form onSubmit={handleSubmit(onSubmit)}>
                                <div className="grid gap-4 py-4">
                                    {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
                                    <div className="grid grid-cols-4 items-center gap-4">
                                        <Label htmlFor="title" className="text-right">
                                            –ù–∞–∑–≤–∞–Ω–∏–µ
                                        </Label>
                                        <Input id="title" {...register("title")} className="col-span-3" />
                                    </div>


                                    {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                                    <div className="grid grid-cols-4 items-center gap-4">
                                        <Label htmlFor="description" className="text-right">
                                            –û–ø–∏—Å–∞–Ω–∏–µ
                                        </Label>
                                        <Input id="description" {...register("description")} className="col-span-3" />
                                    </div>


                                    {/* –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                                    <div className="grid grid-cols-4 items-center gap-4">
                                        <Label htmlFor="addeddescription" className="text-left">
                                            –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                                        </Label>
                                        <Input
                                            id="addeddescription"
                                            {...register("addeddescription")}
                                            className="col-span-3"
                                        />
                                    </div>

                                    {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                                    <div className="grid grid-cols-4 items-center gap-4">
                                        <Label htmlFor="image" className="text-left">
                                            –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                                        </Label>
                                        <Input
                                            id="image"
                                            type="file"
                                            accept="image/*"
                                            className="col-span-3"
                                            onChange={handleImageChange}
                                        />
                                    </div>


                                    {/* –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                                    {imagePreview && (
                                        <div className="w-full flex justify-center">
                                            <img
                                                src={imagePreview}
                                                alt="–ü—Ä–µ–≤—å—é"
                                                className="w-40 h-40 object-cover rounded-md"
                                            />
                                        </div>
                                    )}
                                </div>
                                <DialogFooter>
                                    <Button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
                                </DialogFooter>
                            </form>
                        </DialogContent>
                    </Dialog>
                </div>
            </motion.div>
        </motion.div>
    );
}
